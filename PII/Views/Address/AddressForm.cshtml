@using System.Collections.ObjectModel
@model PII.ViewModels.AddressViewModel
@{
    ViewBag.Title = "AddressForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "Address"))
{
    <div class="container">
        <div class="row">
            <div class="form-group-sm">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h6 class="panel-title">
                            RESIDENTIAL ADDRESS
                            <span class="badge float-right " style="font-style: italic">Hi
                                @Html.DisplayFor(m => m.Person.FirstName)
                            </span>
                        </h6>
                    </div>
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="form-group-sm">
                                    <div class="col-sm-3">
                                        @Html.LabelFor(m => m.Address.ProvinceId, new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.Address.ProvinceId, new SelectList(Model.Provinces, "Id", "Name"), "--- Province ---", new {@class ="form-control"})

                                        @Html.LabelFor(m => m.Address.CityId, new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.Address.CityId, new SelectList(Model.Cities, "Id", "Name"), "--- City ---", new { @class = "form-control" })

                                        @Html.LabelFor(m => m.Address.BarangayId, new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.Address.BarangayId, new SelectList(Model.Barangays, "Id", "Name"), "--- Barangay ---", new { @Class = "form-control" })

                                        @Html.LabelFor(m => m.Address.SubdivisionVillage, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Address.SubdivisionVillage, new { @class = "form-control" })

                                        @Html.LabelFor(m => m.Address.Street, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Address.Street, new { @class = "form-control" })

                                        @Html.LabelFor(m => m.Address.HouseBlockLotNo, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Address.HouseBlockLotNo, new { @class = "form-control" })

                                        @Html.LabelFor(m => m.Address.Zip, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Address.Zip, new { @class = "form-control", @title ="Your location Zip number" })

                                        @Html.LabelFor(m => m.Address.Longitude, new { @class = "control-label"})
                                        @Html.TextBoxFor(m => m.Address.Longitude, new { @class = "form-control", @readonly = "readonly" })

                                        @Html.LabelFor(m => m.Address.Latitude, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Address.Latitude, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    <div class="col-sm-9">
                                        <div id="googleMap" style="width:100%;height:400px;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            @Html.HiddenFor(m => m.Address.Id)
            <button class="btn btn-primary btn-sm">Save</button>
            <div class="btn btn-default btn-sm float-right">
                @Html.ActionLink("Save", "Details", "PersonalDataSheet", new { id = @Model.Person.Id }, null)
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            function myMap() {
                var setLatitude = $("#Address_Latitude").val();
                var setLongitude = $("#Address_Longitude").val();
                if (setLatitude == null || setLongitude == null || setLatitude == '' || setLongitude == '') {
                    setLatitude = 14.642978;
                    setLongitude = 121.0366274;
                };

                var myCenter = new google.maps.LatLng(setLatitude, setLongitude);
                var mapOptions = { center: myCenter, zoom: 14 };
                var mapCanvas = document.getElementById("googleMap");
                var map = new google.maps.Map(mapCanvas, mapOptions);
                var marker = new google.maps.Marker({ position: myCenter });
                marker.setMap(map);

                var infowindow = new google.maps.InfoWindow({ content: "Taga dito sya!" });
                //infowindow.open(map, marker);

                google.maps.event.addListener(map, 'click', function(event) { placeMarker(map, event.latLng); });

            }

            function placeMarker(map, location) {
                var marker = new google.maps.Marker({
                    position: location,
                    map: map
                });
                var infowindow = new google.maps.InfoWindow({
                    content: 'Latitude: ' + location.lat() + '<br>Longitude: ' + location.lng()
                });

                //infowindow.open(map, marker);
                $("#Address_Longitude").val(location.lng());
                $("#Address_Latitude").val(location.lat());
            }

            $('#Address_ProvinceId').change(function() {
                var province = $("#Address_ProvinceId").val();
                var city = $('#Address_CityMunicipalityId');
                city.empty();
                if (province != null && province !== '') {
                    $.getJSON('@Url.Action("GetCity")',
                        { provinceId: province },
                        function(cities) {
                            if (cities != null && !jQuery.isEmptyObject(cities)) {
                                city.append($('<option/>',
                                {
                                    value: null,
                                    text: ""
                                }));
                                $.each($.parseJSON(cities),
                                    function(index, location) {
                                        city.append($('<option/>',
                                        {
                                            value: location.Id,
                                            text: location.Name
                                        }));
                                    });
                            };
                        });
                }
            });

            $('#Address_CityMunicipalityId').change(function() {
                var city = $('#Address_CityMunicipalityId').val();
                var barangay = $('#Address_BarangayId');
                barangay.empty();

                if (city != null && city !== '') {
                    $.getJSON('@Url.Action("GetBarangay")',
                        { cityId: city },
                        function(barangays) {
                            if (barangays != null && !jQuery.isEmptyObject(barangays)) {
                                barangay.append($('<option/>',
                                {
                                    value: null,
                                    text: ""
                                }));
                                $.each($.parseJSON(barangays),
                                    function(index, location) {
                                        barangay.append($('<option/>',
                                        {
                                            value: location.Id,
                                            text: location.Name
                                        }));

                                    });
                            };
                        });
                };
            });

            //$(function () {
            //    $(document).tooltip();
            //});
            $(function() {
                $(document).tooltip({
                    tooltipClass: "uitooltip",
                    position: {
                        my: "left top",
                        at: "right+5 top-3"
                    },
                    show: {
                        effect: "slideDown"
                    },
                    hide: {
                        //effect: "shake"
                        effect: "slideUp"
                    }
                    //,truck:true
                });
            });


        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAbO0go4nlwkl8o_p1ol8EZg7zdbc3MuN8&callback=myMap"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    }



}